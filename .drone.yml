---
kind: pipeline
name: e2e-kubernetes-1.16

platform:
  os: linux
  arch: amd64

steps:
  - name: init
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.2.0-rc4
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ clone ]
    settings:
      action: cluster-116
      pipeline_id: cluster-116
      instance_path: /shared
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: test-install
    image: quay.io/sighup/e2e-testing:1.1.0_0.1.3_2.16.1_1.4.0_1.16.3_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - bats -t katalog/tests/velero/velero-install.sh
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: test-backup-restore
    image: quay.io/sighup/e2e-testing:1.1.0_0.1.3_2.16.1_1.4.0_1.16.3_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ test-install ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - curl -Ls -o velero.tar.gz https://github.com/vmware-tanzu/velero/releases/download/v1.2.0/velero-v1.2.0-linux-amd64.tar.gz
      - tar -zxf velero.tar.gz
      - mv velero*/velero /usr/local/bin/velero
      - bats -t katalog/tests/velero/velero-backup.sh
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: init-aws
    image: hashicorp/terraform:0.11.14
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ test-backup-restore ]
    environment:
      CI_PIPELINE_NUMBER: cluster-116-aws
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      TERRAFORM_TF_STATES_BUCKET_NAME:
        from_secret: terraform_tf_states_bucket_name
    commands:
      - cd example/aws-example
      - terraform init
        --backend=true
        --backend-config="bucket=${TERRAFORM_TF_STATES_BUCKET_NAME}"
        --backend-config="key=${CI_REPO}/${DRONE_BRANCH}/${CI_BUILD_NUMBER}/${CI_PIPELINE_NUMBER}"
        --backend-config="region=${AWS_DEFAULT_REGION}"
      - terraform apply --auto-approve
      - terraform output cloud_credentials > /shared/cloud_credentials.config
      - terraform output volume_snapshot_location > /shared/volume_snapshot_location.yaml
      - terraform output backup_storage_location > /shared/backup_storage_location.yaml
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: apply-aws-configuration
    image: quay.io/sighup/e2e-testing:1.1.0_0.1.3_2.16.1_1.4.0_1.16.3_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ init-aws ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - kubectl create secret generic cloud-credentials --from-file=cloud=/shared/cloud_credentials.config --dry-run -o yaml | kubectl apply -f - -n kube-system
      - kubectl apply -f /shared/backup_storage_location.yaml -n kube-system
      - kubectl rollout restart deploy velero -n kube-system
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: test-backup-restore-aws
    image: quay.io/sighup/e2e-testing:1.1.0_0.1.3_2.16.1_1.4.0_1.16.3_3.2.2_2.4.1
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ apply-aws-configuration ]
    commands:
      - export KUBECONFIG=/shared/kube/kubeconfig-116
      - curl -Ls -o velero.tar.gz https://github.com/vmware-tanzu/velero/releases/download/v1.2.0/velero-v1.2.0-linux-amd64.tar.gz
      - tar -zxf velero.tar.gz
      - mv velero*/velero /usr/local/bin/velero
      - bats -t katalog/tests/velero/velero-backup.sh
    when:
      ref:
        include:
          - refs/heads/hotfix-*
          - refs/heads/feature/deprecate-and-update
          - refs/tags/**

  - name: destroy-aws
    image: hashicorp/terraform:0.11.14
    pull: always
    volumes:
    - name: shared
      path: /shared
    depends_on: [ test-backup-restore-aws ]
    environment:
      CI_PIPELINE_NUMBER: cluster-116-aws
      AWS_DEFAULT_REGION:
        from_secret: aws_region
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      TERRAFORM_TF_STATES_BUCKET_NAME:
        from_secret: terraform_tf_states_bucket_name
    commands:
      - cd example/aws-example
      - terraform init
        --backend=true
        --backend-config="bucket=${TERRAFORM_TF_STATES_BUCKET_NAME}"
        --backend-config="key=${CI_REPO}/${DRONE_BRANCH}/${CI_BUILD_NUMBER}/${CI_PIPELINE_NUMBER}"
        --backend-config="region=${AWS_DEFAULT_REGION}"
      - terraform destroy --auto-approve
    when:
      status:
      - success
      - failure

  - name: destroy
    image: quay.io/sighup/e2e-testing-drone-plugin:v0.2.0-rc4
    pull: always
    depends_on: [ test-backup-restore-aws ]
    settings:
      action: destroy
      pipeline_id: cluster-116
      aws_default_region:
        from_secret: aws_region
      aws_access_key_id:
        from_secret: aws_access_key_id
      aws_secret_access_key:
        from_secret: aws_secret_access_key
      terraform_tf_states_bucket_name:
        from_secret: terraform_tf_states_bucket_name
    when:
      status:
      - success
      - failure

volumes:
- name: shared
  temp: {}

